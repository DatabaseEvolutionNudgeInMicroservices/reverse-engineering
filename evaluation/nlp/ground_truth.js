

/**
 * Ground truth concepts for evaluating concept extraction per project.
 */
const projectsGroundTruthForConceptPipelineExtractionEvaluation = {
    "wise-old-man-master" : [
        "Prisma_Base_Achievement",
        "playerId",
        "name",
        "metric",
        "threshold",
        "accuracy",
        "createdAt",
        "MemberActivity",
        "groupId",
        "playerId",
        "type",
        "role",
        "previousRole",
        "createdAt",
        "PlayerAnnotation",
        "playerId",
        "type",
        "createdAt",
        "PlayerArchive",
        "playerId",
        "previousUsername",
        "archiveUsername",
        "restoredUsername",
        "createdAt",
        "restoredAt",
        "Prisma_Base_GroupSocialLinks",
        "id",
        "groupId",
        "website",
        "discord",
        "twitter",
        "youtube",
        "twitch",
        "updatedAt",
        "createdAt",
        "Membership",
        "playerId",
        "groupId",
        "role",
        "createdAt",
        "updatedAt",
        "Prisma_Base_Group",
        "id",
        "name",
        "clanChat",
        "description",
        "homeworld",
        "verified",
        "patron",
        "visible",
        "profileImage",
        "bannerImage",
        "score",
        "verificationHash",
        "createdAt",
        "updatedAt",
        "creatorIpHash",
        "GroupRoleOrder",
        "role",
        "index",
        "Participation",
        "playerId",
        "competitionId",
        "startSnapshotId",
        "endSnapshotId",
        "teamName",
        "createdAt",
        "updatedAt",
        "Prisma_Base_Competition",
        "id",
        "title",
        "metric",
        "type",
        "startsAt",
        "endsAt",
        "groupId",
        "score",
        "visible",
        "verificationHash",
        "createdAt",
        "updatedAt",
        "creatorIpHash",
        "Prisma_Base_NameChange",
        "id",
        "playerId",
        "oldName",
        "newName",
        "status",
        "reviewContext",
        "resolvedAt",
        "updatedAt",
        "createdAt",
        "Prisma_Base_Player",
        "id",
        "username",
        "displayName",
        "type",
        "build",
        "status",
        "country",
        "patron",
        "exp",
        "ehp",
        "ehb",
        "ttm",
        "tt200m",
        "registeredAt",
        "updatedAt",
        "lastChangedAt",
        "lastImportedAt",
        "latestSnapshotId",
        "Prisma_Base_Record",
        "id",
        "playerId",
        "period",
        "metric",
        "value",
        "updatedAt",
        "Prisma_Base_Snapshot",
        "id",
        "playerId",
        "importedAt",
        "createdAt",
        "overallRank",
        "overallExperience",
        "attackRank",
        "attackExperience",
        "defenceRank",
        "defenceExperience",
        "strengthRank",
        "strengthExperience",
        "hitpointsRank",
        "hitpointsExperience",
        "rangedRank",
        "rangedExperience",
        "prayerRank",
        "prayerExperience",
        "magicRank",
        "magicExperience",
        "cookingRank",
        "cookingExperience",
        "woodcuttingRank",
        "woodcuttingExperience",
        "fletchingRank",
        "fletchingExperience",
        "fishingRank",
        "fishingExperience",
        "firemakingRank",
        "firemakingExperience",
        "craftingRank",
        "craftingExperience",
        "smithingRank",
        "smithingExperience",
        "miningRank",
        "miningExperience",
        "herbloreRank",
        "herbloreExperience",
        "agilityRank",
        "agilityExperience",
        "thievingRank",
        "thievingExperience",
        "slayerRank",
        "slayerExperience",
        "farmingRank",
        "farmingExperience",
        "runecraftingRank",
        "runecraftingExperience",
        "hunterRank",
        "hunterExperience",
        "constructionRank",
        "constructionExperience",
        "league_pointsRank",
        "league_pointsScore",
        "bounty_hunter_hunterRank",
        "bounty_hunter_hunterScore",
        "bounty_hunter_rogueScore",
        "clue_scrolls_allRank",
        "bounty_hunter_rogueRank",
        "clue_scrolls_allScore",
        "clue_scrolls_beginnerRank",
        "clue_scrolls_easyRank",
        "clue_scrolls_beginnerScore",
        "clue_scrolls_easyScore",
        "clue_scrolls_mediumRank",
        "clue_scrolls_mediumScore",
        "clue_scrolls_hardRank",
        "clue_scrolls_hardScore",
        "clue_scrolls_eliteRank",
        "clue_scrolls_eliteScore",
        "clue_scrolls_masterRank",
        "clue_scrolls_masterScore",
        "last_man_standingRank",
        "last_man_standingScore",
        "pvp_arenaRank",
        "pvp_arenaScore",
        "abyssal_sireRank",
        "abyssal_sireKills",
        "alchemical_hydraRank",
        "alchemical_hydraKills",
        "amoxliatlRank",
        "amoxliatlKills",
        "artioRank",
        "artioKills",
        "barrows_chestsRank",
        "barrows_chestsKills",
        "bryophytaKills",
        "bryophytaRank",
        "cerberusKills",
        "chambers_of_xericRank",
        "cerberusRank",
        "callistoRank",
        "callistoKills",
        "calvarionRank",
        "calvarionKills",
        "chambers_of_xericKills",
        "chambers_of_xeric_challenge_modeRank",
        "chambers_of_xeric_challenge_modeKills",
        "chaos_elementalKills",
        "chaos_fanaticKills",
        "chaos_fanaticRank",
        "commander_zilyanaRank",
        "chaos_elementalRank",
        "commander_zilyanaKills",
        "corporeal_beastRank",
        "corporeal_beastKills",
        "crazy_archaeologistRank",
        "crazy_archaeologistKills",
        "dagannoth_primeRank",
        "dagannoth_primeKills",
        "dagannoth_rexRank",
        "dagannoth_rexKills",
        "dagannoth_supremeRank",
        "dagannoth_supremeKills",
        "deranged_archaeologistRank",
        "deranged_archaeologistKills",
        "general_graardorRank",
        "general_graardorKills",
        "giant_moleRank",
        "giant_moleKills",
        "grotesque_guardiansRank",
        "grotesque_guardiansKills",
        "hesporiRank",
        "hesporiKills",
        "kalphite_queenKills",
        "kalphite_queenRank",
        "king_black_dragonRank",
        "king_black_dragonKills",
        "krakenRank",
        "krakenKills",
        "kreearraRank",
        "kreearraKills",
        "kril_tsutsarothRank",
        "kril_tsutsarothKills",
        "mimicRank",
        "mimicKills",
        "nightmareRank",
        "nightmareKills",
        "oborRank",
        "oborKills",
        "phantom_muspahRank",
        "phantom_muspahKills",
        "sarachnisRank",
        "sarachnisKills",
        "scorpiaRank",
        "scorpiaKills",
        "skotizoRank",
        "skotizoKills",
        "spindelRank",
        "spindelKills",
        "the_gauntletRank",
        "the_gauntletKills",
        "the_corrupted_gauntletKills",
        "the_corrupted_gauntletRank",
        "the_hueycoatlRank",
        "the_hueycoatlKills",
        "theatre_of_bloodRank",
        "theatre_of_bloodKills",
        "thermonuclear_smoke_devilRank",
        "thermonuclear_smoke_devilKills",
        "tombs_of_amascutRank",
        "tombs_of_amascutKills",
        "tombs_of_amascut_expertRank",
        "tombs_of_amascut_expertKills",
        "tzkal_zukRank",
        "tzkal_zukKills",
        "tztok_jadRank",
        "tztok_jadKills",
        "venenatisRank",
        "venenatisKills",
        "vetionRank",
        "vetionKills",
        "vorkathRank",
        "vorkathKills",
        "wintertodtRank",
        "zalcanoRank",
        "wintertodtKills",
        "zalcanoKills",
        "zulrahRank",
        "zulrahKills",
        "ehpValue",
        "ehbValue",
        "ehbRank",
        "ehpRank",
        "soul_wars_zealScore",
        "soul_wars_zealRank",
        "temporossKills",
        "temporossRank",
        "theatre_of_blood_hard_modeKills",
        "theatre_of_blood_hard_modeRank",
        "phosanis_nightmareKills",
        "phosanis_nightmareRank",
        "nexKills",
        "nexRank",
        "guardians_of_the_riftScore",
        "guardians_of_the_riftRank"
    ],
    "comments-api-master" : [
        "comment",
        "author",
        "createdOn",
        "hash",
        "id",
        "modifiedOn",
        "postId",
        "published",
        "replyToId",
        "source",
        "ip",
        "browser",
        "referrer",
        "text"
    ],
    "postiz-app-main" : [
        "Organization",
        "id",
        "name",
        "description",
        "apiKey",
        "users",
        "media",
        "paymentId",
        "createdAt",
        "updatedAt",
        "github",
        "subscription",
        "Integration",
        "post",
        "submittedPost",
        "allowTrial",
        "Comments",
        "notifications",
        "buyerOrganization",
        "usedCodes",
        "credits",
        "plugs",
        "customers",
        "webhooks",
        "tags",
        "signatures",
        "autoPost",
        "Tags",
        "id",
        "name",
        "color",
        "orgId",
        "organization",
        "posts",
        "deletedAt",
        "createdAt",
        "updatedAt",
        "TagsPosts",
        "postId",
        "post",
        "tagId",
        "tag",
        "createdAt",
        "updatedAt",
        "User",
        "id",
        "email",
        "password",
        "providerName",
        "name",
        "lastName",
        "isSuperAdmin",
        "bio",
        "audience",
        "pictureId",
        "picture",
        "providerId",
        "organizations",
        "timezone",
        "comments",
        "createdAt",
        "updatedAt",
        "lastReadNotifications",
        "inviteId",
        "activated",
        "items",
        "marketplace",
        "account",
        "connectedAccount",
        "groupBuyer",
        "groupSeller",
        "orderBuyer",
        "orderSeller",
        "payoutProblems",
        "lastOnline",
        "agencies",
        "ip",
        "agent",
        "UsedCodes",
        "id",
        "code",
        "orgId",
        "organization",
        "createdAt",
        "updatedAt",
        "UserOrganization",
        "id",
        "user",
        "userId",
        "organization",
        "organizationId",
        "disabled",
        "role",
        "createdAt",
        "updatedAt",
        "GitHub",
        "id",
        "login",
        "name",
        "token",
        "jobId",
        "organization",
        "organizationId",
        "createdAt",
        "updatedAt",
        "Trending",
        "id",
        "trendingList",
        "language",
        "hash",
        "date",
        "createdAt",
        "updatedAt",
        "TrendingLog",
        "id",
        "language",
        "date",
        "ItemUser",
        "id",
        "user",
        "userId",
        "key",
        "Star",
        "id",
        "stars",
        "totalStars",
        "forks",
        "totalForks",
        "login",
        "date",
        "createdAt",
        "updatedAt",
        "Media",
        "id",
        "name",
        "path",
        "organization",
        "organizationId",
        "createdAt",
        "updatedAt",
        "userPicture",
        "agencies",
        "deletedAt",
        "SocialMediaAgency",
        "id",
        "user",
        "userId",
        "name",
        "logoId",
        "logo",
        "website",
        "slug",
        "facebook",
        "instagram",
        "twitter",
        "linkedIn",
        "youtube",
        "tiktok",
        "otherSocialMedia",
        "shortDescription",
        "description",
        "niches",
        "approved",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "SocialMediaAgencyNiche",
        "agencyId",
        "agency",
        "niche",
        "Credits",
        "id",
        "organization",
        "organizationId",
        "credits",
        "createdAt",
        "updatedAt",
        "Subscription",
        "id",
        "organizationId",
        "organization",
        "subscriptionTier",
        "identifier",
        "cancelAt",
        "period",
        "totalChannels",
        "isLifetime",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "Customer",
        "id",
        "name",
        "orgId",
        "organization",
        "integrations",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "Integration",
        "id",
        "internalId",
        "organizationId",
        "name",
        "organization",
        "picture",
        "providerIdentifier",
        "type",
        "token",
        "disabled",
        "tokenExpiration",
        "refreshToken",
        "posts",
        "profile",
        "deletedAt",
        "createdAt",
        "updatedAt",
        "orderItems",
        "inBetweenSteps",
        "refreshNeeded",
        "postingTimes",
        "customInstanceDetails",
        "customerId",
        "customer",
        "plugs",
        "exisingPlugData",
        "rootInternalId",
        "additionalSettings",
        "webhooks",
        "Signatures",
        "id",
        "organizationId",
        "organization",
        "content",
        "autoAdd",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "Comments",
        "id",
        "content",
        "organizationId",
        "organization",
        "postId",
        "post",
        "userId",
        "user",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "Post",
        "id",
        "state",
        "publishDate",
        "organizationId",
        "integrationId",
        "content",
        "group",
        "organization",
        "integration",
        "title",
        "description",
        "parentPostId",
        "releaseId",
        "releaseURL",
        "settings",
        "parentPost",
        "childrenPost",
        "image",
        "submittedForOrderId",
        "submittedForOrder",
        "submittedForOrganizationId",
        "submittedForOrganization",
        "approvedSubmitForOrder",
        "lastMessageId",
        "lastMessage",
        "intervalInDays",
        "payoutProblems",
        "comments",
        "tags",
        "error",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "Notifications",
        "id",
        "organizationId",
        "organization",
        "content",
        "link",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "MessagesGroup",
        "id",
        "buyerOrganizationId",
        "buyerOrganization",
        "buyerId",
        "buyer",
        "sellerId",
        "seller",
        "messages",
        "orders",
        "createdAt",
        "updatedAt",
        "PayoutProblems",
        "id",
        "status",
        "orderId",
        "order",
        "userId",
        "user",
        "postId",
        "post",
        "amount",
        "createdAt",
        "updatedAt",
        "Orders",
        "id",
        "buyerId",
        "sellerId",
        "posts",
        "buyer",
        "seller",
        "status",
        "ordersItems",
        "messageGroupId",
        "messageGroup",
        "captureId",
        "payoutProblems",
        "createdAt",
        "updatedAt",
        "OrderItems",
        "id",
        "orderId",
        "order",
        "integrationId",
        "integration",
        "quantity",
        "price",
        "Messages",
        "id",
        "from",
        "content",
        "groupId",
        "group",
        "special",
        "posts",
        "createdAt",
        "updatedAt",
        "deletedAt",
        "Plugs",
        "id",
        "organizationId",
        "organization",
        "plugFunction",
        "data",
        "integrationId",
        "integration",
        "activated",
        "ExisingPlugData",
        "id",
        "integrationId",
        "integration",
        "methodName",
        "value",
        "PopularPosts",
        "id",
        "category",
        "topic",
        "content",
        "hook",
        "createdAt",
        "updatedAt",
        "IntegrationsWebhooks",
        "integrationId",
        "integration",
        "webhookId",
        "webhook",
        "Webhooks",
        "id",
        "name",
        "organizationId",
        "organization",
        "integrations",
        "url",
        "deletedAt",
        "createdAt",
        "updatedAt",
        "AutoPost",
        "id",
        "organizationId",
        "organization",
        "title",
        "content",
        "onSlot",
        "syncLast",
        "url",
        "lastUrl",
        "active",
        "addPicture",
        "generateContent",
        "integrations",
        "deletedAt",
        "createdAt",
        "updatedAt"
    ]
}


/**
 * Ground truth data for evaluating file classifications across different projects.
 * This object contains the expected DB and API files for various projects.
 * Each project has two arrays:
 * 1. `expected_db_files` - List of files that are expected to be DB files.
 * 2. `expected_api_files` - List of files that are expected to be API files.
 */
const projectsGroundTruthForFileTaggingEvaluation = {
    "cinema-microservice-master": {
        "expected_db_files": [
            'booking-service/src/repository/repository.js',
            'cinema-catalog-service/src/repository/repository.js',
            'movies-service/src/repository/repository.js',
            'payment-service/src/repository/repository.js'
        ],
        "expected_api_files": [
            'booking-service/src/api/booking.js',
            'booking-service/src/services/payment.service.js',
            'booking-service/src/services/notification.service.js',
            'cinema-catalog-service/src/api/cinema-catalog.js',
            'movies-service/src/api/movies.js',
            'notification-service/src/api/notification.js',
            'payment-service/src/api/payment.js',
        ]
    },
    "robot-shop-master": {
        "expected_db_files": [
            'catalogue/server.js',
            'mongo/catalogue.js',
            'mongo/users.js',
            'user/server.js',
            'cart/server.js'
        ],
        "expected_api_files": [
            'catalogue/server.js',
            'cart/server.js',
            'user/server.js'
        ]
    },
    "comments-api-master": {
        "expected_db_files": [
            "db/index.js",
            "src/data-access/comments-db.js"
        ],
        "expected_api_files": [
            "src/index.js"
        ]
    },
    "overleaf-main": {
        "expected_db_files": [
            "services/docstore/app/js/HealthChecker.js",
            "services/docstore/app/js/MongoManager.js",
            "services/docstore/app/js/mongodb.js",
            "services/document-updater/app/js/SnapshotManager.js",
            "services/document-updater/app/js/mongodb.js",
            "services/chat/app/js/Features/Messages/MessageManager.js",
            "services/chat/app/js/Features/Threads/ThreadManager.js",
            "services/chat/app/js/mongodb.js",
            "services/contacts/app/js/ContactManager.js",
            "services/contacts/app/js/mongodb.js",
            "services/notifications/app/js/HealthCheckController.js",
            "services/notifications/app/js/Notifications.js",
            "services/notifications/app/js/mongodb.js",
            "services/web/app/src/Features/Spelling/LearnedWordsManager.js",
            "services/web/app/src/infrastructure/mongodb.js",
            "services/document-updater/app/js/DispatchManager.js",
            "services/document-updater/app/js/ProjectHistoryRedisManager.js",
            "services/document-updater/app/js/LockManager.js",
            "services/document-updater/app/js/ProjectFlusher.js",
            "services/document-updater/app/js/ProjectHistoryRedisManager.js",
            "services/document-updater/app/js/RealTimeRedisManager.js",
            "services/document-updater/app/js/RedisManager.js",
            "services/real-time/app.js",
            "services/real-time/app/js/ConnectedUserManager.js",
            "services/real-time/app/js/DocumentUpdaterManager.js",
            "services/real-time/app/js/DocumentUpdaterController.js",
            "services/real-time/app/js/ChannelManager.js",
            "services/real-time/app/js/WebsocketLoadBalancer.js",
            "services/project-history/app/js/LockManager.js",
            "services/project-history/app/js/RedisManager.js",
            "services/project-history/app/js/mongodb.js"
        ],
        "expected_api_files": [
            "services/docstore/app.js",
            "services/document-updater/app.js",
            "serivces/chat/app.js",
            "services/clsi/app.js",
            "services/contacts/app.js",
            "services/filestore/app.js",
            "services/notifications/app.js",
            "services/real-time/app/js/Router.js",
            "services/real-time/app.js",
            "services/history-v1/app.js",
            "services/project-history/app.js",
        ]
    },
    "cloudboost-master": {
        "expected_db_files": [
            "data-service/cron/expire.js",
            "data-service/database-connect/keyService.js",
            "data-service/databases/mongo.js",
            "data-service/helpers/mongo.js",
            "data-service/services/app.js",
            "data-service/services/cloudObject.js",
            "data-service/services/table.js",
            "data-service/database-connect/apiTracker.js",
            "data-service/helpers/session.js",
            "data-service/helpers/socketQuery.js",
            "data-service/helpers/socketSession.js",
        ],
        "expected_api_files": [
            "data-service/api/app/Admin.js",
            "data-service/api/app/App.js",
            "data-service/api/app/AppFiles.js",
            "data-service/api/app/AppSettings.js",
            "data-service/api/db/mongo.js",
            "data-service/api/email/CloudEmail.js",
            "data-service/api/file/CloudFiles.js",
            "data-service/api/pages/Page.js",
            "data-service/api/server/Server.js",
            "data-service/api/tables/CloudObject.js",
            "data-service/api/tables/CloudUser.js",
            "data-service/helpers/github.js",
            "data-service/routes.js",
        ]
    },
    "wise-old-man-master": {
        "expected_db_files": [
            'server/__tests__/suites/integration/achievements.test.ts',
            'server/__tests__/suites/integration/competitions.test.ts',
            'server/__tests__/suites/integration/deltas.test.ts',
            'server/__tests__/suites/integration/efficiency.test.ts',
            'server/__tests__/suites/integration/general.test.ts',
            'server/__tests__/suites/integration/groups.test.ts',
            'server/__tests__/suites/integration/names.test.ts',
            'server/__tests__/suites/integration/patrons.test.ts',
            'server/__tests__/suites/integration/players.test.ts',
            'server/__tests__/suites/integration/records.test.ts',
            'server/src/api/modules/achievements/services/FindGroupAchievementsService.ts',
            'server/src/api/modules/achievements/services/FindPlayerAchievementProgressService.ts',
            'server/src/api/modules/achievements/services/FindPlayerAchievementsService.ts',
            'server/src/api/modules/achievements/services/ReevaluatePlayerAchievementsService.ts',
            'server/src/api/modules/competitions/competition.events.ts',
            'server/src/api/modules/competitions/services/AddParticipantsService.ts',
            'server/src/api/modules/competitions/services/AddTeamsService.ts',
            'server/src/api/modules/competitions/services/AddToGroupCompetitionsService.ts',
            'server/src/api/modules/competitions/services/CreateCompetitionService.ts',
            'server/src/api/modules/competitions/services/DeleteCompetitionService.ts',
            'server/src/api/modules/competitions/services/EditCompetitionService.ts',
            'server/src/api/modules/competitions/services/FetchCompetitionDetailsService.ts',
            'server/src/api/modules/competitions/services/FetchTop5ProgressService.ts',
            'server/src/api/modules/competitions/services/FindGroupCompetitionsService.ts',
            'server/src/api/modules/competitions/services/FindPlayerParticipationsService.ts',
            'server/src/api/modules/competitions/services/FindPlayerParticipationsStandings2Service.ts',
            'server/src/api/modules/competitions/services/RemoveFromGroupCompetitionsService.ts',
            'server/src/api/modules/competitions/services/RemoveParticipantsService.ts',
            'server/src/api/modules/competitions/services/RemoveTeamsService.ts',
            'server/src/api/modules/competitions/services/ResetCompetitionCodeService.ts',
            'server/src/api/modules/competitions/services/SearchCompetitionsService.ts',
            'server/src/api/modules/competitions/services/UpdateAllParticipantsService.ts',
            'server/src/api/modules/deltas/services/FindDeltaLeaderboardsService.ts',
            'server/src/api/modules/deltas/services/FindGroupDeltasService.ts',
            'server/src/api/modules/deltas/services/FindPlayerDeltasService.ts',
            'server/src/api/modules/efficiency/services/ComputeEfficiencyRankService.ts',
            'server/src/api/modules/efficiency/services/FindEfficiencyLeaderboardsService.ts',
            'server/src/api/modules/general/services/AllowUserActionsService.ts',
            'server/src/api/modules/general/services/BlockUserActionsService.ts',
            'server/src/api/modules/general/services/CreateAPIKeyService.ts',
            'server/src/api/modules/general/services/FetchTableCountsService.ts',
            'server/src/api/modules/groups/group.events.ts',
            'server/src/api/modules/groups/services/AddMembersService.ts',
            'server/src/api/modules/groups/services/ChangeMemberRoleService.ts',
            'server/src/api/modules/groups/services/CreateGroupService.ts',
            'server/src/api/modules/groups/services/DeleteGroupService.ts',
            'server/src/api/modules/groups/services/EditGroupService.ts',
            'server/src/api/modules/groups/services/FetchGroupActivityService.ts',
            'server/src/api/modules/groups/services/FetchGroupDetailsService.ts',
            'server/src/api/modules/groups/services/FetchGroupHiscoresService.ts',
            'server/src/api/modules/groups/services/FetchGroupStatisticsService.ts',
            'server/src/api/modules/groups/services/FetchMembersCSVService.ts',
            'server/src/api/modules/groups/services/FindPlayerMembershipsService.ts',
            'server/src/api/modules/groups/services/RemoveMembersService.ts',
            'server/src/api/modules/groups/services/ResetGroupCodeService.ts',
            'server/src/api/modules/groups/services/SearchGroupsService.ts',
            'server/src/api/modules/groups/services/UpdateAllMembersService.ts',
            'server/src/api/modules/groups/services/VerifyGroupService.ts',
            'server/src/api/modules/name-changes/services/ApproveNameChangeService.ts',
            'server/src/api/modules/name-changes/services/ClearNameChangeHistoryService.ts',
            'server/src/api/modules/name-changes/services/DenyNameChangeService.ts',
            'server/src/api/modules/name-changes/services/FetchNameChangeDetailsService.ts',
            'server/src/api/modules/name-changes/services/FindGroupNameChangesService.ts',
            'server/src/api/modules/name-changes/services/FindPlayerNameChangesService.ts',
            'server/src/api/modules/name-changes/services/SearchNameChangesService.ts',
            'server/src/api/modules/name-changes/services/SubmitNameChangeService.ts',
            'server/src/api/modules/patrons/services/ClaimPatreonBenefitsService.ts',
            'server/src/api/modules/players/player.router.ts',
            'server/src/api/modules/players/player.utils.ts',
            'server/src/api/modules/players/services/ArchivePlayerService.ts',
            'server/src/api/modules/players/services/AssertPlayerTypeService.ts',
            'server/src/api/modules/players/services/ChangePlayerCountryService.ts',
            'server/src/api/modules/players/services/CreateAnnotationService.ts',
            'server/src/api/modules/players/services/DeleteAnnotationService.ts',
            'server/src/api/modules/players/services/DeletePlayerService.ts',
            'server/src/api/modules/players/services/FetchPlayerDetailsService.ts',
            'server/src/api/modules/players/services/FindOrCreatePlayersService.ts',
            'server/src/api/modules/players/services/FindPlayerArchivesService.ts',
            'server/src/api/modules/players/services/ImportPlayerHistoryService.ts',
            'server/src/api/modules/players/services/SearchPlayersService.ts',
            'server/src/api/modules/players/services/UpdatePlayerService.ts',
            'server/src/api/modules/records/services/FindGroupRecordsService.ts',
            'server/src/api/modules/records/services/FindPlayerRecordsService.ts',
            'server/src/api/modules/records/services/FindRecordLeaderboardsService.ts',
            'server/src/api/modules/snapshots/services/FindGroupSnapshotsService.ts',
            'server/src/api/modules/snapshots/services/FindPlayerSnapshotsService.ts',
            'server/src/api/modules/snapshots/services/FindPlayerSnapshotTimelineService.ts',
            'server/src/api/modules/snapshots/services/RollbackCollectionLogService.ts',
            'server/src/api/modules/snapshots/services/RollbackSnapshotsService.ts',
            'server/src/api/services/external/discord.service.ts',
            'server/src/api/util/middlewares.ts',
            'server/src/jobs-new/handlers/assert-player-type.job.ts',
            'server/src/jobs-new/handlers/calculate-computed-rank-tables.job.ts',
            'server/src/jobs-new/handlers/check-creation-spam.job.ts',
            'server/src/jobs-new/handlers/check-inappropriate-content.job.ts',
            'server/src/jobs-new/handlers/check-player-banned.job.ts',
            'server/src/jobs-new/handlers/check-player-ranked.job.ts',
            'server/src/jobs-new/handlers/invalidate-deltas.job.ts',
            'server/src/jobs-new/handlers/review-name-change.job.ts',
            'server/src/jobs-new/handlers/schedule-banned-player-checks.job.ts',
            'server/src/jobs-new/handlers/schedule-competition-events.job.ts',
            'server/src/jobs-new/handlers/schedule-competition-score-updates.job.ts',
            'server/src/jobs-new/handlers/schedule-flagged-player-review.job.ts',
            'server/src/jobs-new/handlers/schedule-group-score-updates.job.ts',
            'server/src/jobs-new/handlers/schedule-name-change-reviews.job.ts',
            'server/src/jobs-new/handlers/schedule-patron-group-updates.job.ts',
            'server/src/jobs-new/handlers/schedule-patron-player-updates.job.ts',
            'server/src/jobs-new/handlers/sync-api-keys.job.ts',
            'server/src/jobs-new/handlers/sync-patrons.job.ts',
            'server/src/jobs-new/handlers/sync-player-achievements.job.ts',
            'server/src/jobs-new/handlers/sync-player-competition-participations.job.ts',
            'server/src/jobs-new/handlers/sync-player-deltas.job.ts',
            'server/src/jobs-new/handlers/sync-player-records.job.ts',
            'server/src/jobs-new/handlers/update-competition-score.job.ts',
            'server/src/jobs-new/handlers/update-group-score.job.ts',
            'server/src/jobs-new/handlers/update-player.job.ts',
            'server/src/prisma/index.ts'
        ],
        "expected_api_files": [
            "server/src/api/routing.ts",
            "server/src/api/modules/competitions/competition.router.ts",
            "server/src/api/modules/deltas/delta.router.ts",
            "server/src/api/modules/efficiency/efficiency.router.ts",
            "server/src/api/modules/general/general.router.ts",
            "server/src/api/modules/groups/group.router.ts",
            "server/src/api/modules/name-changes/name-change.router.ts",
            "server/src/api/modules/patrons/patron.router.ts",
            "server/src/api/modules/players/player.router.ts",
            "server/src/api/modules/records/record.router.ts"
        ]
    },
    "postiz-app-main": {
        "expected_db_files": [
            "libraries/nestjs-libraries/src/database/prisma/agencies/agencies.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/autopost/autopost.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/integrations/integration.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/marketplace/item.user.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/marketplace/messages.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/media/media.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/notifications/notifications.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/organizations/organization.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/posts/posts.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/signatures/signature.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/stars/stars.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/subscriptions/subscription.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/users/users.repository.ts",
            "libraries/nestjs-libraries/src/database/prisma/webhooks/webhooks.repository.ts"
        ],
        "expected_api_files": [
            "apps/backend/src/api/routes/agencies.controller.ts",
            "apps/backend/src/api/routes/analytics.controller.ts",
            "apps/backend/src/api/routes/auth.controller.ts",
            "apps/backend/src/api/routes/autopost.controller.ts",
            "apps/backend/src/api/routes/billing.controller.ts",
            "apps/backend/src/api/routes/copilot.controller.ts",
            "apps/backend/src/api/routes/integrations.controller.ts",
            "apps/backend/src/api/routes/marketplace.controller.ts",
            "apps/backend/src/api/routes/mcp.controller.ts",
            "apps/backend/src/api/routes/media.controller.ts",
            "apps/backend/src/api/routes/messages.controller.ts",
            "apps/backend/src/api/routes/notifications.controller.ts",
            "apps/backend/src/api/routes/posts.controller.ts",
            "apps/backend/src/api/routes/public.controller.ts",
            "apps/backend/src/api/routes/root.controller.ts",
            "apps/backend/src/api/routes/settings.controller.ts",
            "apps/backend/src/api/routes/signature.controller.ts",
            "apps/backend/src/api/routes/stripe.controller.ts",
            "apps/backend/src/api/routes/users.controller.ts",
            "apps/backend/src/api/routes/webhooks.controller.ts",
            "apps/backend/src/public-api/routes/v1/public.integrations.controller.ts",
            "apps/workers/src/app/plugs.controller.ts",
            "apps/workers/src/app/posts.controller.ts",
            "apps/workers/src/app/stars.controller.ts"
        ]
    }
}



module.exports = {projectsGroundTruthForConceptPipelineExtractionEvaluation, projectsGroundTruthForFileTaggingEvaluation};